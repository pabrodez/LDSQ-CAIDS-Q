{
    "collab_server" : "",
    "contents" : "if (!dir.exists(\"./data\")) dir.create(\"./data\")\nif (!dir.exists(\"./data/raw\")) dir.create(\"./data/raw\")\n\n# 1. Read data ------------------------------------------------------------\nlist.files(\"./data/raw\", pattern = \".xlsx\")\n\nlibrary(xlsx)\n\nadult_jun_nov <- read.xlsx(\"./data/raw/ANON_EDashboard_Jun-Nov2017.xlsx\", sheetIndex = 1, startRow = 2, header = TRUE)\nchild_jun_nov <- read.xlsx(\"./data/raw/ANON_EDashboard_Jun-Nov2017.xlsx\", sheetIndex = 2, startRow = 2, header = TRUE)\nadult_dec_may <- read.xlsx(\"./data/raw/ANON_LDSQ DATA Dec16-May17.xlsx\", sheetIndex = 1, header = TRUE)\nchild_dec_may <- read.xlsx(\"./data/raw/ANON_LDSQ DATA Dec16-May17.xlsx\", sheetIndex = 2, header = TRUE)\n\n# 2. Compare variables ----------------------------------------------------\ndiff_jun_dec <- setdiff(names(adult_jun_nov), names(adult_dec_may))\ndiff_dec_jun <- setdiff(names(adult_dec_may), names(adult_jun_nov))  \ndiff_jun_dec_c <- setdiff(names(child_jun_nov), names(child_dec_may))  \ndiff_dec_jun_c <- setdiff(names(child_dec_may), names(child_jun_nov))  \n# gives a simple view of what names of variables are present in the 1st and not in the second\n# criteria: If, after renaming variables, one name shows in one but strictly no in the other, discard; \n# if one name shows in one, not in the other and there is one named in other way, then include and change names\n\n# 2.2. Subset -------------------------------------------------------------\n#  For the sake of consistency present vars in one DF and absent in the other should be discarded \n# Exception: \"FME.start.time\" and \"FME.end.time\" in jun_nov DF, which can be used to compute a new var of the mins in FME (present in dec_may DF);\n# \"Learning disability\", \"Physical.disability\", \"Mental.health\" can be kept in a separate DF. \n# \"Learning disability\" can be used to match against the LDSQ score.\n# Create var FME mins in jun-nov datasets from FME.start.time and FME.end.time\nlibrary(lubridate)\nadult_jun_nov$FME.mins <- difftime(adult_jun_nov$FME.end.time, adult_jun_nov$FME.start.time, units = \"mins\")\nchild_jun_nov$FME.mins <- difftime(child_jun_nov$FME.end.time, child_jun_nov$FME.start.time, units = \"mins\")\n\nlibrary(tidyverse)\n\nad_dec_sub <- adult_dec_may[!names(adult_dec_may) %in% diff_dec_jun]\nad_jun_sub <- adult_jun_nov[!names(adult_jun_nov) %in% diff_jun_dec]\nch_dec_sub <- child_dec_may[!names(child_dec_may) %in% diff_dec_jun_c]\nch_jun_sub <- child_jun_nov[!names(child_jun_nov) %in% diff_jun_dec_c]\n\n# Discard rows with empty values in all columns\n\nad_dec_sub <- ad_dec_sub[rowSums(is.na(ad_dec_sub)) != ncol(ad_dec_sub), ]\nad_jun_sub <- ad_jun_sub[rowSums(is.na(ad_jun_sub)) != ncol(ad_jun_sub), ]\nch_dec_sub <- ch_dec_sub[rowSums(is.na(ch_dec_sub)) != ncol(ch_dec_sub), ]\nch_jun_sub <- ch_jun_sub[rowSums(is.na(ch_jun_sub)) != ncol(ch_jun_sub), ]\n\n# rowdis <- function(x) {\n#   x[rowSums(is.na(x)) != ncol(x), ]\n# }\n# lapply(df_list, rowdis)\n\n# Discard columns with empty values in all columns\nad_dec_sub <- ad_dec_sub[, colSums(is.na(ad_dec_sub)) != nrow(ad_dec_sub)]\nad_jun_sub <- ad_jun_sub[, colSums(is.na(ad_jun_sub)) != nrow(ad_jun_sub)]\nch_dec_sub <- ch_dec_sub[, colSums(is.na(ch_dec_sub)) != nrow(ch_dec_sub)]\nch_jun_sub <- ch_jun_sub[, colSums(is.na(ch_jun_sub)) != nrow(ch_jun_sub)]\n\ncompareCols <- function(df1, df2) {\n  commonNames <- names(df1)[names(df1) %in% names(df2)]\n  data.frame(Column = commonNames,\n             df1 = sapply(df1[,commonNames], class),\n             df2 = sapply(df2[,commonNames], class)) \n}\ncompareCols(ad_dec_sub, ad_jun_sub)\ncompareCols(ch_dec_sub, ch_jun_sub)\n\n\n# Remove invalid values and substitue with NA for consistency. Change other values when necessary\nlibrary(plyr)\nuniqueVals <- function(df1, df2) {\n  commonNames <- names(df1)[names(df1) %in% names(df2)]\n  list(df1 = sapply(df1[,commonNames], unique),\n             df2 = sapply(df2[,commonNames], unique)) \n}\n\n# 3. Substitue invalid values for NAs. Change other values when necessary--------\n\n\nuniqueVals(ad_dec_sub, ad_jun_sub) #check\n\n# adults starting on dec\nad_dec_sub$Area.of.residence <- as.factor(gsub(pattern = \"Not provided\", replacement = NA, as.character(ad_dec_sub$Area.of.residence)))\nad_dec_sub$Relationship.to.alleged.perp. <- as.factor(gsub(pattern = \"Other (see comments)\", replacement = \"Other\", as.character(ad_dec_sub$Relationship.to.alleged.perp.)))\nad_dec_sub$Assault.type.1 <- as.factor(gsub(pattern = \"Penile anal\", replacement = \"Penile Anal\", as.character(ad_dec_sub$Assault.type.1)))\nad_dec_sub$Assault.type.2 <- as.factor(gsub(pattern = \"Penile oral\", replacement = \"Penile Oral\", as.character(ad_dec_sub$Assault.type.2)))\nad_dec_sub$Assault.type.2 <- as.factor(gsub(pattern = \"Penile anal\", replacement = \"Penile Anal\", as.character(ad_dec_sub$Assault.type.2)))\nad_dec_sub$Assault.type.4 <- as.factor(gsub(pattern = \"digital vaginal\", replacement = \"Digital Vaginal\", as.character(ad_dec_sub$Assault.type.2)))\nad_dec_sub$Referrer <- as.factor(gsub(pattern = \"Police Referrals\", replacement = \"Police\", as.character(ad_dec_sub$Referrer)))\nad_dec_sub$Referrer <- as.factor(gsub(pattern = \"Self Referrals\", replacement = \"Self\", as.character(ad_dec_sub$Referrer)))\nad_dec_sub$DV.history <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ad_dec_sub$DV.history)))\nad_dec_sub$DV.history <- as.factor(gsub(pattern = \"Dash score\", replacement = \"Yes\", as.character(ad_dec_sub$DV.history)))\nad_dec_sub$DASH.Score <- as.factor(gsub(pattern = \"Declined\", replacement = NA, as.character(ad_dec_sub$DASH.Score)))\nad_dec_sub$DASH.Score <- as.factor(gsub(pattern = \"police\", replacement = NA, as.character(ad_dec_sub$DASH.Score)))\nad_dec_sub$DASH.Score <- as.factor(gsub(pattern = \"Medium\", replacement = NA, as.character(ad_dec_sub$DASH.Score)))\nad_dec_sub$Met.on.internet <- as.factor(gsub(pattern = \"NO\", replacement = \"No\", as.character(ad_dec_sub$Met.on.internet)))\nad_dec_sub$Met.on.internet <- as.factor(gsub(pattern = \"no\", replacement = \"No\", as.character(ad_dec_sub$Met.on.internet)))\nad_dec_sub$Met.on.internet <- as.factor(gsub(pattern = \"YES\", replacement = \"Yes\", as.character(ad_dec_sub$Met.on.internet)))\nad_dec_sub$Met.on.internet <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ad_dec_sub$Met.on.internet)))\n\nad_dec_sub$No..of.perps. <- ifelse(ad_dec_sub$No..of.perps. > 1, c(\"Multiple perps\"), c(\"Single perp\")) \nad_dec_sub$No..of.perps. <- as.factor(ad_dec_sub$No..of.perps.)\n\nad_dec_sub$Emergency.contraception <- as.factor(gsub(ad_dec_sub$Emergency.contraception, pattern = \"N/A\", replacement = NA))\nad_dec_sub$HIV.PEP <- as.factor(gsub(ad_dec_sub$HIV.PEP, pattern = \"N/A\", replacement = NA))\nad_dec_sub$Hep.B <- as.factor(gsub(ad_dec_sub$Hep.B, pattern = \"N/A\", replacement = NA))\n\n# adults starting on jun\nad_jun_sub$Gender <- as.factor(gsub(pattern = \"female\", replacement = \"Female\", as.character(ad_jun_sub$Gender)))\nad_jun_sub$Area.of.residence <- as.factor(gsub(pattern = \"No fixed abode\", replacement = \"No fixed above\", as.character(ad_jun_sub$Area.of.residence)))\n# ad_jun_sub$DASH.Score is dicotomical: >14 or <14, or \"Police DASH\", which means Police hold the score, not known.\n# change ad_dec_sub$DASH.Score to >14 or <14 categories for consistency\n# Issue: there are values of 14 in ad_dec_sub$DASH.Score. Because d_jun_sub$DASH.Score is >14 or <14 there's no inclusion of value 14 in any of both categories, leaving the value outside.\n# Check presence of value 14 in ad_dec_sub$DASH.Score\nsort(summary(ad_dec_sub$DASH.Score), decreasing = TRUE) # there are 8 values of 14 and 328 NA's\nad_jun_sub$DASH.Score <- as.factor(gsub(pattern = \"Police DASH\", replacement = NA, as.character(ad_jun_sub$DASH.Score)))\nad_dec_sub$DASH.Score <- as.factor(ifelse(as.numeric(as.character(ad_dec_sub$DASH.Score)) >= 14, c(\">=14\"), c(\"<14\")))\n# Create empty levels on both factors for compability:\nad_jun_sub$DASH.Score <- factor(ad_jun_sub$DASH.Score, levels = c(levels(ad_jun_sub$DASH.Score), \">=14\"))\nad_dec_sub$DASH.Score <- factor(ad_dec_sub$DASH.Score, levels = c(levels(ad_dec_sub$DASH.Score), \">14\"))\n\nad_jun_sub$Ethnicity <- as.factor(gsub(pattern = \"white - British\", replacement = \"White - British\", as.character(ad_jun_sub$Ethnicity)))\nad_jun_sub$Religion <- as.factor(gsub(pattern = \"none\", replacement = \"None\", as.character(ad_jun_sub$Religion)))\nad_jun_sub$Religion <- as.factor(gsub(pattern = \"none\", replacement = \"None\", as.character(ad_jun_sub$Religion)))\nad_jun_sub$Met.on.internet <- as.factor(gsub(pattern = \"no\", replacement = \"No\", as.character(ad_jun_sub$Met.on.internet)))\nad_jun_sub$Met.on.internet <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ad_jun_sub$Met.on.internet)))\n# Typo in data entry: \"Vaginal rape\" in ad_jun_sub$Met.on.internet\ntable(ad_jun_sub$Met.on.internet)\nad_jun_sub$Met.on.internet <- as.factor(gsub(pattern = \"Vaginal rape\", replacement = NA, as.character(ad_jun_sub$Met.on.internet)))\nad_jun_sub$Assault.type.2 <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ad_jun_sub$Assault.type.2)))\nad_jun_sub$Strangulation <- as.factor(gsub(pattern = \"no\", replacement = \"No\", as.character(ad_jun_sub$Strangulation)))\nad_jun_sub$Strangulation <- as.factor(gsub(pattern = \"Notrecorded in Notes\", replacement = NA, as.character(ad_jun_sub$Strangulation)))\nad_jun_sub$Strangulation <- as.factor(gsub(pattern = \"Not kNown by client\", replacement = \"Unkown\", as.character(ad_jun_sub$Strangulation)))\nad_jun_sub$Sex.Worker <- as.factor(gsub(pattern = \"no\", replacement = \"No\", as.character(ad_jun_sub$Sex.Worker)))\nad_jun_sub$Emergency.contraception <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ad_jun_sub$Emergency.contraception)))\nad_jun_sub$Emergency.contraception <- as.factor(gsub(pattern = \"not required\", replacement = \"Not required\", as.character(ad_jun_sub$Emergency.contraception)))\nad_jun_sub$Emergency.contraception <- as.factor(gsub(pattern = \"Not documented\", replacement = NA, as.character(ad_jun_sub$Emergency.contraception)))\nad_jun_sub$HIV.PEP <- as.factor(gsub(pattern = \"Not documented\", replacement = NA, as.character(ad_jun_sub$HIV.PEP)))\nad_jun_sub$Hep.B <- as.factor(gsub(pattern = \"Not documented\", replacement = NA, as.character(ad_jun_sub$Hep.B)))\nad_jun_sub$Hep.B <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ad_jun_sub$Hep.B)))\nad_jun_sub$Referrer <- as.factor(gsub(pattern = \"self\", replacement = \"Self\", as.character(ad_jun_sub$Referrer)))\nad_jun_sub$Referrer <- as.factor(gsub(pattern = \"police\", replacement = \"Police\", as.character(ad_jun_sub$Referrer)))\nad_jun_sub$LDSQ.. <- as.factor(gsub(pattern = \"declined\", replacement = \"Not done\", as.character(ad_jun_sub$LDSQ..)))  # declined is a reason why it wasn't done, but not done doesn't imply it was declined\n\n# Test this.\n# Could use this to minimize code using gsub:\n# gsubFactor <- function(x, pattern, replacement) {\n# for(i in 1:length(pattern))\n# y <- as.factor(gsub(\n#     pattern[i] ,\n#     replacement[i],\n#     as.character(x)))\n#   y\n# }\n# gsubFactorMult <- function(x, pattern, replacement) {\n#   for(i in 1:length(pattern))\n#     x <- gsub(pattern[i], replacement[i], x)\n#   x\n# }\n# In 1st by using lexical scope would only need to gsubFactor(x, pattern, replacement), but in 2nd should be x$y <- gsubFactorMult(x, pattern, replacement)\n# Using sapply(x, tolower) would do most of the substitution job\nuniqueVals(ch_dec_sub, ch_jun_sub)  # check\n\n# children starting on dec\nch_dec_sub$Referrer <- as.factor(gsub(pattern = \"Police Referrals\", replacement = \"Police\", as.character(ch_dec_sub$Referrer)))\nch_dec_sub$Referrer <- as.factor(gsub(pattern = \"Self Referrals\", replacement = \"Self\", as.character(ch_dec_sub$Referrer)))\n\nch_dec_sub$Assault.type.1 <- as.factor(gsub(pattern = \"Penile anal\", replacement = \"Penile Anal\", as.character(ch_dec_sub$Assault.type.1)))\nch_dec_sub$Assault.type.1 <- as.factor(gsub(pattern = \"Penile vaginal\", replacement = \"Penile Vaginal\", as.character(ch_dec_sub$Assault.type.1)))\n\nch_dec_sub$Assault.type.2 <- as.factor(gsub(pattern = \"Penile anal\", replacement = \"Penile Anal\", as.character(ch_dec_sub$Assault.type.2)))\nch_dec_sub$Assault.type.2 <- as.factor(gsub(pattern = \"Digital anal\", replacement = \"Digital Anal\", as.character(ch_dec_sub$Assault.type.2)))\n\nch_dec_sub$No..of.perps. <- ifelse(as.numeric(as.character(ch_dec_sub$No..of.perps.)) > 1, c(\"Multiple perps\"), c(\"Single perp\"))\nch_dec_sub$No..of.perps. <- as.factor(ch_dec_sub$No..of.perps.)\n\nch_dec_sub$Relationship.to.alleged.perp. <- as.factor(gsub(pattern = \"Acquaitnace > 24 hours\", replacement = \"Acquaintance > 24 hours\", as.character(ch_dec_sub$Relationship.to.alleged.perp.)))\n\nch_dec_sub$Met.on.internet <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ch_dec_sub$Met.on.internet)))\n\nch_dec_sub$Emergency.contraception <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ch_dec_sub$Emergency.contraception)))\nch_dec_sub$Emergency.contraception <- as.factor(gsub(pattern = \"Unknown\", replacement = NA, as.character(ch_dec_sub$Emergency.contraception)))\n\nch_dec_sub$HIV.PEP <- as.factor(gsub(pattern = \"N/a\", replacement = NA, as.character(ch_dec_sub$HIV.PEP)))\nch_dec_sub$HIV.PEP <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ch_dec_sub$HIV.PEP)))\nch_dec_sub$HIV.PEP <- as.factor(gsub(pattern = \"Unknown\", replacement = NA, as.character(ch_dec_sub$HIV.PEP)))\n\nch_dec_sub$Hep.B <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ch_dec_sub$Hep.B)))\nch_dec_sub$Hep.B <- as.factor(gsub(pattern = \"Unknown\", replacement = NA, as.character(ch_dec_sub$Hep.B)))\n\nch_dec_sub$U.16.DVD <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ch_dec_sub$U.16.DVD)))\nch_dec_sub$U.16.DVD <- as.factor(gsub(pattern = \"Unknown\", replacement = NA, as.character(ch_dec_sub$U.16.DVD)))\n\nch_dec_sub$CSE.CSE.risk <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ch_dec_sub$CSE.CSE.risk)))\n\n# children starting on jun\nch_jun_sub$FME.context <- as.factor(gsub(pattern = \"acute\", replacement = \"Acute\", as.character(ch_jun_sub$FME.context)))\n\nch_jun_sub$Gender <- as.factor(gsub(pattern = \"female\", replacement = \"Female\", as.character(ch_jun_sub$Gender)))\nch_jun_sub$Gender <- as.factor(gsub(pattern = \"male\", replacement = \"Male\", as.character(ch_jun_sub$Gender)))\n\nch_jun_sub$Ethnicity <- as.factor(gsub(pattern = \"white - British\", replacement = \"White - British\", as.character(ch_jun_sub$Ethnicity)))\nch_jun_sub$Ethnicity <- as.factor(gsub(pattern = \"Not known\", replacement = NA, as.character(ch_jun_sub$Ethnicity)))\n\nch_jun_sub$Religion <- as.factor(gsub(pattern = \"none\", replacement = \"None\", as.character(ch_jun_sub$Religion)))\n\nch_jun_sub$DV.history <- as.factor(gsub(pattern = \"no\", replacement = \"No\", as.character(ch_jun_sub$DV.history)))\nch_jun_sub$DV.history <- as.factor(gsub(pattern = \"Unknown\", replacement = NA, as.character(ch_jun_sub$DV.history)))\nch_jun_sub$DV.history <- as.factor(gsub(pattern = \"UnkNown\", replacement = NA, as.character(ch_jun_sub$DV.history)))\n\nch_jun_sub$CSE.CSE.risk <- as.factor(gsub(pattern = \"no\", replacement = \"No\", as.character(ch_jun_sub$CSE.CSE.risk)))\nch_jun_sub$CSE.CSE.risk <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ch_jun_sub$CSE.CSE.risk)))\nch_jun_sub$CSE.CSE.risk <- as.factor(gsub(pattern = \"UnkNown\", replacement = NA, as.character(ch_jun_sub$CSE.CSE.risk)))\n\nch_jun_sub$Relationship.to.alleged.perp. <- as.factor(gsub(pattern = \"brother\", replacement = \"Brother\", as.character(ch_jun_sub$Relationship.to.alleged.perp.)))\nch_jun_sub$Relationship.to.alleged.perp. <- as.factor(gsub(pattern = \"father\", replacement = \"Father\", as.character(ch_jun_sub$Relationship.to.alleged.perp.)))\nch_jun_sub$Relationship.to.alleged.perp. <- as.factor(gsub(pattern = \"stranger\", replacement = \"Stranger\", as.character(ch_jun_sub$Relationship.to.alleged.perp.)))\n\nch_jun_sub$Met.on.internet <- as.factor(gsub(pattern = \"no\", replacement = \"No\", as.character(ch_jun_sub$Met.on.internet)))\nch_jun_sub$Met.on.internet <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ch_jun_sub$Met.on.internet)))\n\nch_jun_sub$Assault.type.2 <- as.factor(gsub(pattern = \"oral rape\", replacement = \"Oral rape\", as.character(ch_jun_sub$Assault.type.2)))\nch_jun_sub$Assault.type.2 <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ch_jun_sub$Assault.type.2)))\n\nch_jun_sub$Assault.type.3 <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ch_jun_sub$Assault.type.3)))\nch_jun_sub$Assault.type.3 <- as.factor(gsub(pattern = \"anal rape\", replacement = \"Anal rape\", as.character(ch_jun_sub$Assault.type.3)))\n\nch_jun_sub$Emergency.contraception <- as.factor(gsub(pattern = \"anal rape\", replacement = \"Anal rape\", as.character(ch_jun_sub$Emergency.contraception)))\nch_jun_sub$Emergency.contraception <- as.factor(gsub(pattern = \"already had\", replacement = \"Yes\", as.character(ch_jun_sub$Emergency.contraception)))\nch_jun_sub$Emergency.contraception <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ch_jun_sub$Emergency.contraception)))\n\nch_jun_sub$HIV.PEP <- as.factor(gsub(pattern = \"not required\", replacement = \"Not required\", as.character(ch_jun_sub$HIV.PEP)))\nch_jun_sub$HIV.PEP <- as.factor(gsub(pattern = \"Not documented\", replacement = NA, as.character(ch_jun_sub$HIV.PEP)))\n\nch_jun_sub$Hep.B <- as.factor(gsub(pattern = \" Declined\", replacement = \"Declined\", as.character(ch_jun_sub$Hep.B)))\nch_jun_sub$Hep.B <- as.factor(gsub(pattern = \"Not\", replacement = \"No\", as.character(ch_jun_sub$Hep.B)))\nch_jun_sub$Hep.B <- as.factor(gsub(pattern = \"Not documented\", replacement = NA, as.character(ch_jun_sub$Hep.B)))\nch_jun_sub$Hep.B <- as.factor(gsub(pattern = \"No documented\", replacement = NA, as.character(ch_jun_sub$Hep.B)))\n\nch_jun_sub$U.16.DVD <- as.factor(gsub(pattern = \"dvd\", replacement = NA, as.character(ch_jun_sub$U.16.DVD)))\nch_jun_sub$U.16.DVD <- as.factor(gsub(pattern = \"n/a\", replacement = NA, as.character(ch_jun_sub$U.16.DVD)))\nch_jun_sub$U.16.DVD <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ch_jun_sub$U.16.DVD)))\nch_jun_sub$U.16.DVD <- as.factor(gsub(pattern = \"yes\", replacement = \"Yes\", as.character(ch_jun_sub$U.16.DVD)))\nch_jun_sub$U.16.DVD <- as.factor(gsub(pattern = \"yES\", replacement = \"Yes\", as.character(ch_jun_sub$U.16.DVD)))\nch_jun_sub$U.16.DVD <- as.factor(gsub(pattern = \"no\", replacement = \"No\", as.character(ch_jun_sub$U.16.DVD)))\n\nch_jun_sub$Referrer <- as.factor(gsub(pattern = \"POLICE\", replacement = \"Police\", as.character(ch_jun_sub$Referrer)))\nch_jun_sub$Referrer <- as.factor(gsub(pattern = \"police\", replacement = \"Police\", as.character(ch_jun_sub$Referrer)))\n\nch_jun_sub$CAIDSQ.. <- as.factor(gsub(pattern = \"N/A\", replacement = NA, as.character(ch_jun_sub$CAIDSQ..)))\nch_jun_sub$CAIDSQ.. <- as.factor(gsub(pattern = \"not done\", replacement = \"Not done\", as.character(ch_jun_sub$CAIDSQ..)))\n\n# Function to change to lowcase all characters in DF\n# lapply(df, function(x) {\n#   if (is.character(x)) return(tolower(x))\n#   else return(v)\n# })\n\n# 4. Rbind DFs ------------------------------------------------------------\n# fix mistake:\nsetdiff(names(ad_dec_sub), names(ad_jun_sub))\nsetdiff(names(ad_jun_sub), names(ad_dec_sub)) \nad_dec_sub$FME.mins <- NULL\nad_jun_sub$FME.mins <- NULL\nsetdiff(names(ch_dec_sub), names(ch_jun_sub))  \nsetdiff(names(ch_jun_sub), names(ch_dec_sub)) \nch_dec_sub$Assault.type.4 <- NA\nch_jun_sub$FME.mins <- NULL\n\nadultDF <- rbind(ad_dec_sub, ad_jun_sub)\nchildDF <- rbind(ch_dec_sub, ch_jun_sub)\n\nsapply(adultDF[, names(adultDF)], class)\nsapply(childDF[, names(childDF)], class)\nchildDF$Assault.type.4 <- factor(childDF$Assault.type.4)\n\nsapply(adultDF[, names(adultDF)], unique)\nsapply(childDF[, names(childDF)], unique)\n\n# correction:\nchildDF$Gender <- as.factor(gsub(pattern = \"FeMale\", replacement = \"Female\", as.character(childDF$Gender)))\n\n# 5. Explore and map missing values ---------------------------------------\nlibrary(data.table)\nlibrary(tidyverse)\n# divide between chategorial and numeric vars. Keep date aside\ncatVarAd <- names(adultDF)[which(sapply(adultDF, is.factor))]\nnumVarAd <- names(adultDF)[which(sapply(adultDF, is.numeric))]\n\ncatVarCh <- names(childDF)[which(sapply(childDF, is.factor))]\nnumVarCh <- names(childDF)[which(sapply(childDF, is.numeric))]\n\n# check for NAs\ncolSums(sapply(adultDF, is.na))  # Assult type 2, 3 and 4 are not needed to be answered. While the 1st is usually answered the others can be if there are multiple types  \ncolSums(sapply(childDF, is.na))  # Same as above\n\n# Using the vector for cat and num vars we could be specific\ncolSums(sapply(as.data.table(adultDF)[,.SD, .SDcols = catVarAd], is.na))\ncolSums(sapply(as.data.table(adultDF)[,.SD, .SDcols = numVarAd], is.na))\n\ncolSums(sapply(as.data.table(childDF)[,.SD, .SDcols = catVarCh], is.na))\ncolSums(sapply(as.data.table(childDF)[,.SD, .SDcols = numVarCh], is.na))\n\n# Visualize map of NAs\nplotNa <- function(dataFrame, title = NULL) {\n  tempDf <- as.data.frame(ifelse(is.na(dataFrame), 0, 1))\n  tempDf <- tempDf[, order(colSums(tempDf))]\n  tempData <- expand.grid(list(x = 1:nrow(tempDf), y = colnames(tempDf)))\n  tempData$v <- as.vector(as.matrix(tempDf))\n  tempData <- data.frame(x = unlist(tempData$x), y = unlist(tempData$y), v = unlist(tempData$v))\n  ggplot(tempData) + geom_tile(aes(x=x, y=y, fill=factor(v))) +\n    scale_fill_manual(values=c(\"white\", \"black\"), name=\"Missing value\\n1=No, 0=Yes\") +\n    theme_light() + ylab(\"\") + xlab(\"Rows of data set\") + ggtitle(title)\n  \n}\n\nplotNa(adultDF)\nggsave(\"NAs adult data-set.png\", plot = last_plot(), device = \"png\", path = \"./plots\")\nplotNa(childDF)\nggsave(\"NAs children data-set.png\", plot = last_plot(), device = \"png\", path = \"./plots\")\n\n# percentage of missing values in each variable\nsapply(adultDF, function(x) sum(is.na(x)) / nrow(adultDF))\nsapply(childDF, function(x) sum(is.na(x)) / nrow(childDF))\n\n# check duplicated rows\nsum(duplicated(adultDF))\nsum(duplicated(childDF))\nchildDF[duplicated(childDF), ]  # they don't seem as strict duplicates: Different dates.\n\n\n# 6. Summary statistics ---------------------------------------------------\n# rmarkdown::render(\"./reports/Week 5-11 Feb/Report 5-11 Feb.Rmd\", \"pdf_document\")\n\n# Summarize categorical data\nsummary(as.data.table(adultDF)[, .SD, .SDcols = catVarAd])\nsummary(as.data.table(childDF)[, .SD, .SDcols = catVarCh])\n\n# Summarize numeric data\nsummary(as.data.table(adultDF)[, .SD, .SDcols = numVarAd])\nsummary(as.data.table(childDF)[, .SD, .SDcols = numVarCh])\n\n# Assign categ and num vars to DFs\nadult_cat <- as.data.table(adultDF)[,.SD, .SDcols = catVarAd]\nadult_num <- as.data.table(adultDF)[,.SD, .SDcols = numVarAd]\nchild_cat <- as.data.table(childDF)[,.SD, .SDcols = catVarCh]\nchild_num <- as.data.table(childDF)[,.SD, .SDcols = numVarCh]\n\n# Functions to plot\nlibrary(gridExtra)\nlibrary(e1071)  \n\nplotHist <- function(input, i) {\n  data <- data.frame(x=input[[i]])\n  his <- ggplot(data=data, aes(x=factor(x))) + stat_count() + xlab(colnames(input)[i]) + theme_light() + \n    theme(axis.text.x = element_text(angle = 90, hjust =1))\n  return (his)\n}\n\n\ndensity_glot <- function(input, i){\n  data <- data.frame(x=input[[i]])\n  plot <- ggplot(data = data) + geom_line(aes(x = x), stat = 'density', size = 1,alpha = 1.0) +\n    xlab(paste0((colnames(input)[i]), '\\n', 'Skewness: ',round(skewness(input[[i]], na.rm = TRUE), 2))) + theme_light() \n  return(suppressWarnings(plot))\n  \n}\n\ngrid_plot <- function(input, fun, ii, ncol=2) {\n  plot_list <- list()\n  for (i in ii) {\n    plot <- fun(input=input, i=i)\n    plot_list <- c(plot_list, list(plot))\n  }\n  do.call(\"grid.arrange\", c(plot_list, ncol=ncol))\n}\n# Cat vars adults\ngrid_plot(adult_cat, plotHist, c(1, 3, 4))\ngrid_plot(adult_cat, plotHist, 5:8, ncol = 1)\ngrid_plot(adult_cat, plotHist, 9:12)\ngrid_plot(adult_cat, plotHist, 13:16)\ngrid_plot(adult_cat, plotHist, 16:20)\n\n# Cat vars children\ngrid_plot(child_cat, plotHist, c(1, 2, 4))\ngrid_plot(child_cat, plotHist, 5:8)\ngrid_plot(child_cat, plotHist, 9:13)\ngrid_plot(child_cat, plotHist, 14:17)\ngrid_plot(child_cat, plotHist, 18:19)\n\n# Num vars adults\ngrid_plot(adult_num, density_glot, ii = 1)\n\n# Num vars chil\ngrid_plot(child_num, density_glot, ii= 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1516324901497.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2239448263",
    "id" : "1ABE3D80",
    "lastKnownWriteTime" : 1518139751,
    "last_content_update" : 1518139751777,
    "path" : "C:/Users/Usuario/Desktop/R volunt/LDSQ-CAIDS-Q/script/LDSQ-CAIDS-Q.R",
    "project_path" : "script/LDSQ-CAIDS-Q.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}